# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbs

import flatbuffers
from flatbuffers.compat import import_numpy

np = import_numpy()


class DataFrame(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = DataFrame()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsDataFrame(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)

    # DataFrame
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # DataFrame
    def Index(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # DataFrame
    def Tags(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from .KeyValue import KeyValue
            obj = KeyValue()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # DataFrame
    def TagsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # DataFrame
    def TagsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

    # DataFrame
    def Data(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int8Flags,
                                 a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 1))
        return 0

    # DataFrame
    def DataAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int8Flags, o)
        return 0

    # DataFrame
    def DataLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # DataFrame
    def DataIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        return o == 0

    # DataFrame
    def Message(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None


def Start(builder): builder.StartObject(4)


def DataFrameStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)


def AddIndex(builder, index): builder.PrependUint64Slot(0, index, 0)


def DataFrameAddIndex(builder, index):
    """This method is deprecated. Please switch to AddIndex."""
    return AddIndex(builder, index)


def AddTags(builder, tags): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(tags),
                                                                0)


def DataFrameAddTags(builder, tags):
    """This method is deprecated. Please switch to AddTags."""
    return AddTags(builder, tags)


def StartTagsVector(builder, numElems): return builder.StartVector(4, numElems, 4)


def DataFrameStartTagsVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartTagsVector(builder, numElems)


def AddData(builder, data): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(data),
                                                                0)


def DataFrameAddData(builder, data):
    """This method is deprecated. Please switch to AddData."""
    return AddData(builder, data)


def StartDataVector(builder, numElems): return builder.StartVector(1, numElems, 1)


def DataFrameStartDataVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartDataVector(builder, numElems)


def AddMessage(builder, message): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(
    message), 0)


def DataFrameAddMessage(builder, message):
    """This method is deprecated. Please switch to AddMessage."""
    return AddMessage(builder, message)


def End(builder): return builder.EndObject()


def DataFrameEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)
